"use strict";function addMetadataListener(){document.addEventListener("app-metadata",OnAppMetadata)}function OnAppMetadata(e){updateMetadata(e.detail)}function updateMetadata(e,t){syncMedatadata(Object.assign({},e,{url:e.url||document.location.href}),t)}Object.defineProperty(exports,"__esModule",{value:!0});const head=document.head;function syncMedatadata(e,t){const a=Object.keys(e);for(let t=0;t<a.length;t++){const n=a[t],d=e[n];switch(n){case"title":document.title=d;break;default:setMetaValue(0,n,d)}switch(n){case"title":case"description":case"image":case"url":setMetaValue(0,"og:"+n,d),setMetaValue(0,"twitter:"+n,d)}}if(t)for(let e=0;e<t.length;e++){const a=t[e];for(let t=0;t<a.length;t++){const n=a[t];setMetaValue(e,n.key,n.value)}}cleanupUnused()}const metaElements={};function setMetaValue(e,t,a){const n=t.startsWith("og:")?"property":"name";let d,s=metaElements[t];if(s?d=s[e]:(s=[],metaElements[t]=s),d)d.content=a;else{const d=`meta[${n}="${t}"]`;let l=e?head.querySelectorAll(d)[e]:head.querySelector(d);l||((l=document.createElement("meta")).setAttribute(n,t),head.appendChild(l)),l.content=a,s[e]=l}updated[t]=e+1}let updated={};function cleanupUnused(){const e=Object.keys(metaElements);for(let t=0;t<e.length;t++){const a=e[t],n=metaElements[a],d=updated[a]||0;if(n.length>d){for(let e=d;e<n.length;e++)head.removeChild(n[e]);n.splice(d)}}updated={}}exports.addMetadataListener=addMetadataListener,exports.updateMetadata=updateMetadata;
//# sourceMappingURL=metadata.js.map
